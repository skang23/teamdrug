/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './interactions';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/nav-controller';
import * as import9 from '../../providers/auth-data';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '../../node_modules/ionic-angular/components/toolbar/toolbar.ngfactory';
import * as import13 from '../../node_modules/ionic-angular/components/navbar/navbar.ngfactory';
import * as import14 from '../../node_modules/ionic-angular/components/toolbar/toolbar-item.ngfactory';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../../node_modules/ionic-angular/components/button/button.ngfactory';
import * as import17 from '../../node_modules/ionic-angular/components/menu/menu-toggle.ngfactory';
import * as import18 from '../../node_modules/ionic-angular/components/icon/icon.ngfactory';
import * as import19 from '../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory';
import * as import20 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import21 from 'ionic-angular/config/config';
import * as import22 from '@angular/core/src/linker/element_ref';
import * as import23 from 'ionic-angular/navigation/view-controller';
import * as import24 from 'ionic-angular/components/app/app';
import * as import25 from 'ionic-angular/components/toolbar/toolbar';
import * as import26 from 'ionic-angular/components/menu/menu-controller';
import * as import27 from 'ionic-angular/util/keyboard';
import * as import28 from '@angular/core/src/zone/ng_zone';
import * as import29 from 'ionic-angular/components/tabs/tabs';
import * as import30 from 'ionic-angular/components/icon/icon';
import * as import31 from 'ionic-angular/components/button/button';
import * as import32 from 'ionic-angular/components/menu/menu-toggle';
import * as import33 from 'ionic-angular/components/toolbar/toolbar-item';
import * as import34 from 'ionic-angular/components/toolbar/toolbar-title';
import * as import35 from 'ionic-angular/components/navbar/navbar';
import * as import36 from 'ionic-angular/components/content/content';
export class Wrapper_InteractionsPage {
  context:import0.InteractionsPage;
  changed:boolean;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this.context = new import0.InteractionsPage(p0,p1);
  }
  detectChangesInternal(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_InteractionsPage_Host:import2.RenderComponentType = (null as any);
class _View_InteractionsPage_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _InteractionsPage_0_4:Wrapper_InteractionsPage;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_InteractionsPage_Host0,renderType_InteractionsPage_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('page-interactions',rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_InteractionsPage0(this.viewUtils,this.injector(0),this._appEl_0);
    this._InteractionsPage_0_4 = new Wrapper_InteractionsPage(this.parentInjector.get(import8.NavController),this.parentInjector.get(import9.AuthData));
    this._appEl_0.initComponent(this._InteractionsPage_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._InteractionsPage_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.InteractionsPage) && (0 === requestNodeIndex))) { return this._InteractionsPage_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InteractionsPage_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_InteractionsPage_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_InteractionsPage_Host === (null as any))) { (renderType_InteractionsPage_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_InteractionsPage_Host0(viewUtils,parentInjector,declarationEl);
}
export const InteractionsPageNgFactory:import11.ComponentFactory<import0.InteractionsPage> = new import11.ComponentFactory<import0.InteractionsPage>('page-interactions',viewFactory_InteractionsPage_Host0,import0.InteractionsPage);
const styles_InteractionsPage:any[] = ([] as any[]);
var renderType_InteractionsPage:import2.RenderComponentType = (null as any);
class _View_InteractionsPage0 extends import1.AppView<import0.InteractionsPage> {
  _text_0:any;
  _el_1:any;
  _Header_1_3:import12.Wrapper_Header;
  _text_2:any;
  _el_3:any;
  /*private*/ _appEl_3:import3.AppElement;
  _Navbar_3_4:import13.Wrapper_Navbar;
  _text_4:any;
  _el_5:any;
  _ToolbarItem_5_3:import14.Wrapper_ToolbarItem;
  _query_Button_5_0:import15.QueryList<any>;
  _text_6:any;
  _el_7:any;
  /*private*/ _appEl_7:import3.AppElement;
  _Button_7_4:import16.Wrapper_Button;
  _MenuToggle_7_5:import17.Wrapper_MenuToggle;
  _ToolbarItem_7_6:import14.Wrapper_ToolbarItem;
  _query_Button_7_0:import15.QueryList<any>;
  _text_8:any;
  _el_9:any;
  _Icon_9_3:import18.Wrapper_Icon;
  _text_10:any;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _ToolbarItem_13_3:import14.Wrapper_ToolbarItem;
  _query_Button_13_0:import15.QueryList<any>;
  _text_14:any;
  _el_15:any;
  /*private*/ _appEl_15:import3.AppElement;
  _Button_15_4:import16.Wrapper_Button;
  _text_16:any;
  _el_17:any;
  _Icon_17_3:import18.Wrapper_Icon;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  /*private*/ _appEl_21:import3.AppElement;
  _ToolbarTitle_21_4:import19.Wrapper_ToolbarTitle;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  _el_26:any;
  /*private*/ _appEl_26:import3.AppElement;
  _Content_26_4:import20.Wrapper_Content;
  _text_27:any;
  _text_28:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_InteractionsPage0,renderType_InteractionsPage,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'ion-header',(null as any));
    this._Header_1_3 = new import12.Wrapper_Header(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_1),this.renderer,this.parentInjector.get(import23.ViewController,(null as any)));
    this._text_2 = this.renderer.createText(this._el_1,'\n\n  ',(null as any));
    this._el_3 = this.renderer.createElement(this._el_1,'ion-navbar',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','toolbar');
    this._appEl_3 = new import3.AppElement(3,1,this,this._el_3);
    var compView_3:any = import13.viewFactory_Navbar0(this.viewUtils,this.injector(3),this._appEl_3);
    this._Navbar_3_4 = new import13.Wrapper_Navbar(this.parentInjector.get(import24.App),this.parentInjector.get(import23.ViewController,(null as any)),this.parentInjector.get(import8.NavController,(null as any)),this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_3),this.renderer);
    this._appEl_3.initComponent(this._Navbar_3_4.context,([] as any[]),compView_3);
    this._text_4 = this.renderer.createText((null as any),'\n  	',(null as any));
    this._el_5 = this.renderer.createElement((null as any),'ion-buttons',(null as any));
    this.renderer.setElementAttribute(this._el_5,'start','');
    this._ToolbarItem_5_3 = new import14.Wrapper_ToolbarItem(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_5),this.renderer,this.parentInjector.get(import25.Toolbar,(null as any)),this._Navbar_3_4.context);
    this._query_Button_5_0 = new import15.QueryList<any>();
    this._text_6 = this.renderer.createText(this._el_5,'\n	  	',(null as any));
    this._el_7 = this.renderer.createElement(this._el_5,'button',(null as any));
    this.renderer.setElementAttribute(this._el_7,'icon-only','');
    this.renderer.setElementAttribute(this._el_7,'ion-button','');
    this.renderer.setElementAttribute(this._el_7,'menuToggle','');
    this._appEl_7 = new import3.AppElement(7,5,this,this._el_7);
    var compView_7:any = import16.viewFactory_Button0(this.viewUtils,this.injector(7),this._appEl_7);
    this._Button_7_4 = new import16.Wrapper_Button('','',this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_7),this.renderer);
    this._MenuToggle_7_5 = new import17.Wrapper_MenuToggle(this.parentInjector.get(import26.MenuController),new import22.ElementRef(this._el_7),this.parentInjector.get(import23.ViewController,(null as any)),this._Navbar_3_4.context);
    this._ToolbarItem_7_6 = new import14.Wrapper_ToolbarItem(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_7),this.renderer,this.parentInjector.get(import25.Toolbar,(null as any)),this._Navbar_3_4.context);
    this._query_Button_7_0 = new import15.QueryList<any>();
    this._appEl_7.initComponent(this._Button_7_4.context,([] as any[]),compView_7);
    this._text_8 = this.renderer.createText((null as any),'\n	  		',(null as any));
    this._el_9 = this.renderer.createElement((null as any),'ion-icon',(null as any));
    this.renderer.setElementAttribute(this._el_9,'name','menu');
    this.renderer.setElementAttribute(this._el_9,'role','img');
    this._Icon_9_3 = new import18.Wrapper_Icon(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_9),this.renderer);
    this._text_10 = this.renderer.createText((null as any),'\n	  	',(null as any));
      compView_7.create(this._Button_7_4.context,[([] as any[]).concat([
        this._text_8,
        this._el_9,
        this._text_10
      ]
    )],(null as any));
    this._text_11 = this.renderer.createText(this._el_5,'\n	  ',(null as any));
    this._text_12 = this.renderer.createText((null as any),'\n	  ',(null as any));
    this._el_13 = this.renderer.createElement((null as any),'ion-buttons',(null as any));
    this.renderer.setElementAttribute(this._el_13,'end','');
    this._ToolbarItem_13_3 = new import14.Wrapper_ToolbarItem(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_13),this.renderer,this.parentInjector.get(import25.Toolbar,(null as any)),this._Navbar_3_4.context);
    this._query_Button_13_0 = new import15.QueryList<any>();
    this._text_14 = this.renderer.createText(this._el_13,'\n    	',(null as any));
    this._el_15 = this.renderer.createElement(this._el_13,'button',(null as any));
    this.renderer.setElementAttribute(this._el_15,'icon-only','');
    this.renderer.setElementAttribute(this._el_15,'ion-button','');
    this._appEl_15 = new import3.AppElement(15,13,this,this._el_15);
    var compView_15:any = import16.viewFactory_Button0(this.viewUtils,this.injector(15),this._appEl_15);
    this._Button_15_4 = new import16.Wrapper_Button((null as any),'',this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_15),this.renderer);
    this._appEl_15.initComponent(this._Button_15_4.context,([] as any[]),compView_15);
    this._text_16 = this.renderer.createText((null as any),'\n    		',(null as any));
    this._el_17 = this.renderer.createElement((null as any),'ion-icon',(null as any));
    this.renderer.setElementAttribute(this._el_17,'name','log-out');
    this.renderer.setElementAttribute(this._el_17,'role','img');
    this._Icon_17_3 = new import18.Wrapper_Icon(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_17),this.renderer);
    this._text_18 = this.renderer.createText((null as any),'\n    	',(null as any));
      compView_15.create(this._Button_15_4.context,[([] as any[]).concat([
        this._text_16,
        this._el_17,
        this._text_18
      ]
    )],(null as any));
    this._text_19 = this.renderer.createText(this._el_13,'\n    ',(null as any));
    this._text_20 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_21 = this.renderer.createElement((null as any),'ion-title',(null as any));
    this._appEl_21 = new import3.AppElement(21,3,this,this._el_21);
    var compView_21:any = import19.viewFactory_ToolbarTitle0(this.viewUtils,this.injector(21),this._appEl_21);
    this._ToolbarTitle_21_4 = new import19.Wrapper_ToolbarTitle(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_21),this.renderer,this.parentInjector.get(import25.Toolbar,(null as any)),this._Navbar_3_4.context);
    this._appEl_21.initComponent(this._ToolbarTitle_21_4.context,([] as any[]),compView_21);
    this._text_22 = this.renderer.createText((null as any),'MED MEN',(null as any));
    compView_21.create(this._ToolbarTitle_21_4.context,[([] as any[]).concat([this._text_22])],(null as any));
    this._text_23 = this.renderer.createText((null as any),'\n  ',(null as any));
    compView_3.create(this._Navbar_3_4.context,[
      ([] as any[]),
      ([] as any[]).concat([this._el_5]),
      ([] as any[]).concat([this._el_13]),
      ([] as any[]).concat([
        this._text_4,
        this._text_12,
        this._text_20,
        this._el_21,
        this._text_23
      ]
      )
    ]
    ,(null as any));
    this._text_24 = this.renderer.createText(this._el_1,'\n\n',(null as any));
    this._text_25 = this.renderer.createText(parentRenderNode,'\n\n\n',(null as any));
    this._el_26 = this.renderer.createElement(parentRenderNode,'ion-content',(null as any));
    this.renderer.setElementAttribute(this._el_26,'padding','');
    this._appEl_26 = new import3.AppElement(26,(null as any),this,this._el_26);
    var compView_26:any = import20.viewFactory_Content0(this.viewUtils,this.injector(26),this._appEl_26);
    this._Content_26_4 = new import20.Wrapper_Content(this.parentInjector.get(import21.Config),new import22.ElementRef(this._el_26),this.renderer,this.parentInjector.get(import24.App),this.parentInjector.get(import27.Keyboard),this.parentInjector.get(import28.NgZone),this.parentInjector.get(import23.ViewController,(null as any)),this.parentInjector.get(import29.Tabs,(null as any)));
    this._appEl_26.initComponent(this._Content_26_4.context,([] as any[]),compView_26);
    this._text_27 = this.renderer.createText((null as any),'\n\n',(null as any));
    compView_26.create(this._Content_26_4.context,[
      ([] as any[]),
      ([] as any[]).concat([this._text_27]),
      ([] as any[])
    ]
    ,(null as any));
    this._text_28 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_7,'click',this.eventHandler(this._handle_click_7_0.bind(this)));
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    var disposable_1:Function = this.renderer.listen(this._el_15,'click',this.eventHandler(this._handle_click_15_0.bind(this)));
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._text_23,
      this._text_24,
      this._text_25,
      this._el_26,
      this._text_27,
      this._text_28
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import30.Icon) && (9 === requestNodeIndex))) { return this._Icon_9_3.context; }
    if (((token === import31.Button) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._Button_7_4.context; }
    if (((token === import32.MenuToggle) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MenuToggle_7_5.context; }
    if (((token === import33.ToolbarItem) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._ToolbarItem_7_6.context; }
    if (((token === import33.ToolbarItem) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._ToolbarItem_5_3.context; }
    if (((token === import30.Icon) && (17 === requestNodeIndex))) { return this._Icon_17_3.context; }
    if (((token === import31.Button) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 18)))) { return this._Button_15_4.context; }
    if (((token === import33.ToolbarItem) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._ToolbarItem_13_3.context; }
    if (((token === import34.ToolbarTitle) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._ToolbarTitle_21_4.context; }
    if (((token === import35.Navbar) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._Navbar_3_4.context; }
    if (((token === import25.Header) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._Header_1_3.context; }
    if (((token === import36.Content) && ((26 <= requestNodeIndex) && (requestNodeIndex <= 27)))) { return this._Content_26_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Header_1_3.detectChangesInternal(this,this._el_1,throwOnChange);
    this._Navbar_3_4.detectChangesInternal(this,this._el_3,throwOnChange);
    this._ToolbarItem_5_3.detectChangesInternal(this,this._el_5,throwOnChange);
    if (this._Button_7_4.detectChangesInternal(this,this._el_7,throwOnChange)) { this._appEl_7.componentView.markAsCheckOnce(); }
    const currVal_3:any = '';
    this._MenuToggle_7_5.check_menuToggle(currVal_3,throwOnChange,false);
    this._MenuToggle_7_5.detectChangesInternal(this,this._el_7,throwOnChange);
    this._ToolbarItem_7_6.detectChangesInternal(this,this._el_7,throwOnChange);
    const currVal_5:any = 'menu';
    this._Icon_9_3.check_name(currVal_5,throwOnChange,false);
    this._Icon_9_3.detectChangesInternal(this,this._el_9,throwOnChange);
    this._ToolbarItem_13_3.detectChangesInternal(this,this._el_13,throwOnChange);
    if (this._Button_15_4.detectChangesInternal(this,this._el_15,throwOnChange)) { this._appEl_15.componentView.markAsCheckOnce(); }
    const currVal_8:any = 'log-out';
    this._Icon_17_3.check_name(currVal_8,throwOnChange,false);
    this._Icon_17_3.detectChangesInternal(this,this._el_17,throwOnChange);
    if (this._ToolbarTitle_21_4.detectChangesInternal(this,this._el_21,throwOnChange)) { this._appEl_21.componentView.markAsCheckOnce(); }
    if (this._Content_26_4.detectChangesInternal(this,this._el_26,throwOnChange)) { this._appEl_26.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_Button_7_0.dirty) {
        this._query_Button_7_0.reset([this._Button_7_4.context]);
        this._ToolbarItem_7_6.context._buttons = this._query_Button_7_0;
        this._query_Button_7_0.notifyOnChanges();
      }
      if (this._query_Button_5_0.dirty) {
        this._query_Button_5_0.reset([this._Button_7_4.context]);
        this._ToolbarItem_5_3.context._buttons = this._query_Button_5_0;
        this._query_Button_5_0.notifyOnChanges();
      }
      if (this._query_Button_13_0.dirty) {
        this._query_Button_13_0.reset([this._Button_15_4.context]);
        this._ToolbarItem_13_3.context._buttons = this._query_Button_13_0;
        this._query_Button_13_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._Button_7_4.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._Button_15_4.context.ngAfterContentInit(); }
    }
    const currVal_0:any = this._Navbar_3_4.context._hidden;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementProperty(this._el_3,'hidden',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._Navbar_3_4.context._sbPadding;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_3,'statusbar-padding',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_4:any = this._MenuToggle_7_5.context.isHidden;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_7,'hidden',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_6:any = this._Icon_9_3.context._hidden;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_9,'hide',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_9:any = this._Icon_17_3.context._hidden;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_17,'hide',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this._Content_26_4.context._sbPadding;
    if (import4.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_26,'statusbar-padding',currVal_10);
      this._expr_10 = currVal_10;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Navbar_3_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Icon_9_3.context.ngOnDestroy();
    this._Icon_17_3.context.ngOnDestroy();
    this._Content_26_4.context.ngOnDestroy();
  }
  private _handle_click_7_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MenuToggle_7_5.context.toggle()) !== false);
    return (true && pd_0);
  }
  private _handle_click_15_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.logOut()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_InteractionsPage0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.InteractionsPage> {
  if ((renderType_InteractionsPage === (null as any))) { (renderType_InteractionsPage = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_InteractionsPage,{})); }
  return new _View_InteractionsPage0(viewUtils,parentInjector,declarationEl);
}